09:21:14.455 INFO  [main][SpringBootTestContextBootstrapper.buildDefaultMergedContextConfiguration(AbstractTestContextBootstrapper.java:305)] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.attendance.DepartmentsTest], using SpringBootContextLoader
09:21:14.465 INFO  [main][AbstractContextLoader.generateDefaultLocations(AbstractContextLoader.java:264)] Could not detect default resource locations for test class [com.example.attendance.DepartmentsTest]: no resource found for suffixes {-context.xml, Context.groovy}.
09:21:14.467 INFO  [main][AnnotationConfigContextLoaderUtils.detectDefaultConfigurationClasses(AnnotationConfigContextLoaderUtils.java:83)] Could not detect default configuration classes for test class [com.example.attendance.DepartmentsTest]: DepartmentsTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
09:21:14.603 INFO  [main][SpringBootTestContextBootstrapper.getOrFindConfigurationClasses(SpringBootTestContextBootstrapper.java:239)] Found @SpringBootConfiguration com.example.attendance.AttendanceApplication for test class com.example.attendance.DepartmentsTest
09:21:14.706 INFO  [main][SpringBootTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:245)] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
09:21:14.727 INFO  [main][SpringBootTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:174)] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@186978a6, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2e029d61, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@482d776b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4052274f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@132ddbab, org.springframework.test.context.support.DirtiesContextTestExecutionListener@297ea53a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@acb0951, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5bf22f18, org.springframework.test.context.event.EventPublishingTestExecutionListener@267f474e, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7a7471ce, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@28276e50, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@62e70ea3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3efe7086, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@675d8c96, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@741b3bc3]
09:21:15.156 INFO  [main][DepartmentsTest.logStarting(StartupInfoLogger.java:55)] Starting DepartmentsTest using Java 11.0.14.1 on DESKTOP-PM8IQCK with PID 38840 (started by user in D:\java後端\Java_project\backend-attendance\attendance)
09:21:15.158 INFO  [main][DepartmentsTest.logStartupProfileInfo(SpringApplication.java:632)] No active profile set, falling back to 1 default profile: "default"
09:21:15.842 INFO  [main][RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132)] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
09:21:15.918 INFO  [main][RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201)] Finished Spring Data repository scanning in 66 ms. Found 5 JPA repository interfaces.
09:21:16.516 INFO  [main][HikariDataSource.getConnection(HikariDataSource.java:110)] HikariPool-1 - Starting...
09:21:16.709 INFO  [main][HikariDataSource.getConnection(HikariDataSource.java:123)] HikariPool-1 - Start completed.
09:21:16.783 INFO  [main][LogHelper.logPersistenceUnitInformation(LogHelper.java:31)] HHH000204: Processing PersistenceUnitInfo [name: default]
09:21:16.850 INFO  [main][Version.logVersion(Version.java:44)] HHH000412: Hibernate ORM core version 5.6.15.Final
09:21:17.041 INFO  [main][Version.<clinit>(JavaReflectionManager.java:56)] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
09:21:17.358 INFO  [main][Dialect.<init>(Dialect.java:175)] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
09:21:17.941 INFO  [main][JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
09:21:17.952 INFO  [main][LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:437)] Initialized JPA EntityManagerFactory for persistence unit 'default'
09:21:18.731 WARN  [main][JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor(JpaBaseConfiguration.java:223)] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
09:21:19.456 INFO  [main][DepartmentsTest.logStarted(StartupInfoLogger.java:61)] Started DepartmentsTest in 4.646 seconds (JVM running for 5.907)
09:21:19.900 INFO  [SpringApplicationShutdownHook][LocalContainerEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:651)] Closing JPA EntityManagerFactory for persistence unit 'default'
09:21:19.904 INFO  [SpringApplicationShutdownHook][HikariDataSource.close(HikariDataSource.java:350)] HikariPool-1 - Shutdown initiated...
09:21:19.917 INFO  [SpringApplicationShutdownHook][HikariDataSource.close(HikariDataSource.java:352)] HikariPool-1 - Shutdown completed.
16:01:11.050 INFO  [main][AttendanceApplication.logStarting(StartupInfoLogger.java:55)] Starting AttendanceApplication using Java 11.0.14.1 on DESKTOP-PM8IQCK with PID 26876 (D:\java後端\Java_project\backend-attendance\attendance\bin\main started by user in D:\java後端\Java_project\backend-attendance\attendance)
16:01:11.056 INFO  [main][AttendanceApplication.logStartupProfileInfo(SpringApplication.java:632)] No active profile set, falling back to 1 default profile: "default"
16:01:11.723 INFO  [main][RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132)] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
16:01:11.813 INFO  [main][RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201)] Finished Spring Data repository scanning in 74 ms. Found 6 JPA repository interfaces.
16:01:12.512 INFO  [main][TomcatWebServer.initialize(TomcatWebServer.java:108)] Tomcat initialized with port(s): 8080 (http)
16:01:12.519 INFO  [main][Http11NioProtocol.log(DirectJDKLog.java:173)] Initializing ProtocolHandler ["http-nio-8080"]
16:01:12.520 INFO  [main][StandardService.log(DirectJDKLog.java:173)] Starting service [Tomcat]
16:01:12.521 INFO  [main][StandardEngine.log(DirectJDKLog.java:173)] Starting Servlet engine: [Apache Tomcat/9.0.82]
16:01:12.633 INFO  [main][[/].log(DirectJDKLog.java:173)] Initializing Spring embedded WebApplicationContext
16:01:12.633 INFO  [main][ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:292)] Root WebApplicationContext: initialization completed in 1516 ms
16:01:12.793 INFO  [main][HikariDataSource.getConnection(HikariDataSource.java:110)] HikariPool-1 - Starting...
16:01:12.958 INFO  [main][HikariDataSource.getConnection(HikariDataSource.java:123)] HikariPool-1 - Start completed.
16:01:13.019 INFO  [main][LogHelper.logPersistenceUnitInformation(LogHelper.java:31)] HHH000204: Processing PersistenceUnitInfo [name: default]
16:01:13.083 INFO  [main][Version.logVersion(Version.java:44)] HHH000412: Hibernate ORM core version 5.6.15.Final
16:01:13.266 INFO  [main][Version.<clinit>(JavaReflectionManager.java:56)] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
16:01:13.412 INFO  [main][Dialect.<init>(Dialect.java:175)] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
16:01:14.007 INFO  [main][JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
16:01:14.016 INFO  [main][LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:437)] Initialized JPA EntityManagerFactory for persistence unit 'default'
16:01:14.423 WARN  [main][AnnotationConfigServletWebServerApplicationContext.refresh(AbstractApplicationContext.java:591)] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeeeController': Unsatisfied dependency expressed through field 'employeeservice'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeeServiceImpl': Unsatisfied dependency expressed through field 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeeDao' defined in com.example.attendance.reposity.EmployeeDao defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int); Reason: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!
16:01:14.424 INFO  [main][LocalContainerEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:651)] Closing JPA EntityManagerFactory for persistence unit 'default'
16:01:14.427 INFO  [main][HikariDataSource.close(HikariDataSource.java:350)] HikariPool-1 - Shutdown initiated...
16:01:14.440 INFO  [main][HikariDataSource.close(HikariDataSource.java:352)] HikariPool-1 - Shutdown completed.
16:01:14.442 INFO  [main][StandardService.log(DirectJDKLog.java:173)] Stopping service [Tomcat]
16:01:14.452 INFO  [main][ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136)] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
16:01:14.471 ERROR [main][SpringApplication.reportFailure(SpringApplication.java:818)] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeeeController': Unsatisfied dependency expressed through field 'employeeservice'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeeServiceImpl': Unsatisfied dependency expressed through field 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeeDao' defined in com.example.attendance.reposity.EmployeeDao defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int); Reason: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.example.attendance.AttendanceApplication.main(AttendanceApplication.java:13)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeeServiceImpl': Unsatisfied dependency expressed through field 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeeDao' defined in com.example.attendance.reposity.EmployeeDao defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int); Reason: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeeDao' defined in com.example.attendance.reposity.EmployeeDao defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int); Reason: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int); Reason: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1054)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 44 common frames omitted
Caused by: java.lang.IllegalStateException: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:172)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:139)
	at org.springframework.data.jpa.repository.query.DefaultJpaQueryMethodFactory.build(DefaultJpaQueryMethodFactory.java:44)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 66 common frames omitted
16:01:27.834 INFO  [main][AttendanceApplication.logStarting(StartupInfoLogger.java:55)] Starting AttendanceApplication using Java 11.0.14.1 on DESKTOP-PM8IQCK with PID 36996 (D:\java後端\Java_project\backend-attendance\attendance\bin\main started by user in D:\java後端\Java_project\backend-attendance\attendance)
16:01:27.838 INFO  [main][AttendanceApplication.logStartupProfileInfo(SpringApplication.java:632)] No active profile set, falling back to 1 default profile: "default"
16:01:28.461 INFO  [main][RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132)] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
16:01:28.533 INFO  [main][RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201)] Finished Spring Data repository scanning in 61 ms. Found 6 JPA repository interfaces.
16:01:29.242 INFO  [main][TomcatWebServer.initialize(TomcatWebServer.java:108)] Tomcat initialized with port(s): 8080 (http)
16:01:29.250 INFO  [main][Http11NioProtocol.log(DirectJDKLog.java:173)] Initializing ProtocolHandler ["http-nio-8080"]
16:01:29.251 INFO  [main][StandardService.log(DirectJDKLog.java:173)] Starting service [Tomcat]
16:01:29.251 INFO  [main][StandardEngine.log(DirectJDKLog.java:173)] Starting Servlet engine: [Apache Tomcat/9.0.82]
16:01:29.358 INFO  [main][[/].log(DirectJDKLog.java:173)] Initializing Spring embedded WebApplicationContext
16:01:29.358 INFO  [main][ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:292)] Root WebApplicationContext: initialization completed in 1465 ms
16:01:29.532 INFO  [main][HikariDataSource.getConnection(HikariDataSource.java:110)] HikariPool-1 - Starting...
16:01:29.737 INFO  [main][HikariDataSource.getConnection(HikariDataSource.java:123)] HikariPool-1 - Start completed.
16:01:29.802 INFO  [main][LogHelper.logPersistenceUnitInformation(LogHelper.java:31)] HHH000204: Processing PersistenceUnitInfo [name: default]
16:01:29.855 INFO  [main][Version.logVersion(Version.java:44)] HHH000412: Hibernate ORM core version 5.6.15.Final
16:01:30.037 INFO  [main][Version.<clinit>(JavaReflectionManager.java:56)] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
16:01:30.164 INFO  [main][Dialect.<init>(Dialect.java:175)] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
16:01:30.767 INFO  [main][JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
16:01:30.775 INFO  [main][LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:437)] Initialized JPA EntityManagerFactory for persistence unit 'default'
16:01:31.169 WARN  [main][AnnotationConfigServletWebServerApplicationContext.refresh(AbstractApplicationContext.java:591)] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeeeController': Unsatisfied dependency expressed through field 'employeeservice'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeeServiceImpl': Unsatisfied dependency expressed through field 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeeDao' defined in com.example.attendance.reposity.EmployeeDao defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int); Reason: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!
16:01:31.170 INFO  [main][LocalContainerEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:651)] Closing JPA EntityManagerFactory for persistence unit 'default'
16:01:31.173 INFO  [main][HikariDataSource.close(HikariDataSource.java:350)] HikariPool-1 - Shutdown initiated...
16:01:31.188 INFO  [main][HikariDataSource.close(HikariDataSource.java:352)] HikariPool-1 - Shutdown completed.
16:01:31.190 INFO  [main][StandardService.log(DirectJDKLog.java:173)] Stopping service [Tomcat]
16:01:31.199 INFO  [main][ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136)] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
16:01:31.221 ERROR [main][SpringApplication.reportFailure(SpringApplication.java:818)] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeeeController': Unsatisfied dependency expressed through field 'employeeservice'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeeServiceImpl': Unsatisfied dependency expressed through field 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeeDao' defined in com.example.attendance.reposity.EmployeeDao defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int); Reason: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.example.attendance.AttendanceApplication.main(AttendanceApplication.java:13)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeeServiceImpl': Unsatisfied dependency expressed through field 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeeDao' defined in com.example.attendance.reposity.EmployeeDao defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int); Reason: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeeDao' defined in com.example.attendance.reposity.EmployeeDao defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int); Reason: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int); Reason: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1054)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 44 common frames omitted
Caused by: java.lang.IllegalStateException: Using named parameters for method public abstract int com.example.attendance.reposity.EmployeeDao.updateInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalDate,int,int) but parameter 'Optional[:inputId]' not found in annotated query 'update Employee as e set department = case when :inputDepartment is null then  e.department else :inputDepartment end, name 	   = case when :inputName      is null then  e.name else :inputName end, email		= case when :inputEmail    is null then  e.email else :inputEmail end, jobPosition = case when :inputJobPosition is null then  e.jobPosition else :inputJobPosition end, birthDate 	= case when :inputBirthDate is null then  e.birthDate else :inputBirthDate end, arrivalDate = case when :inputArrivalDate is null then  e.arrivalDate else :inputArrivalDate end, annualLeave = case when :inputAnnualLeave = 0  then  e.annualLeave else :inputAnnualLeave end, sickLeave = case when :inputSickLeave = 0 then  e.sickLeave else :inputSickLeave endwhere e.id = :inputId'!
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:172)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:139)
	at org.springframework.data.jpa.repository.query.DefaultJpaQueryMethodFactory.build(DefaultJpaQueryMethodFactory.java:44)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 66 common frames omitted
16:04:07.088 INFO  [main][AttendanceApplication.logStarting(StartupInfoLogger.java:55)] Starting AttendanceApplication using Java 11.0.14.1 on DESKTOP-PM8IQCK with PID 17596 (D:\java後端\Java_project\backend-attendance\attendance\bin\main started by user in D:\java後端\Java_project\backend-attendance\attendance)
16:04:07.092 INFO  [main][AttendanceApplication.logStartupProfileInfo(SpringApplication.java:632)] No active profile set, falling back to 1 default profile: "default"
16:04:07.700 INFO  [main][RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132)] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
16:04:07.778 INFO  [main][RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201)] Finished Spring Data repository scanning in 66 ms. Found 6 JPA repository interfaces.
16:04:08.495 INFO  [main][TomcatWebServer.initialize(TomcatWebServer.java:108)] Tomcat initialized with port(s): 8080 (http)
16:04:08.503 INFO  [main][Http11NioProtocol.log(DirectJDKLog.java:173)] Initializing ProtocolHandler ["http-nio-8080"]
16:04:08.504 INFO  [main][StandardService.log(DirectJDKLog.java:173)] Starting service [Tomcat]
16:04:08.505 INFO  [main][StandardEngine.log(DirectJDKLog.java:173)] Starting Servlet engine: [Apache Tomcat/9.0.82]
16:04:08.619 INFO  [main][[/].log(DirectJDKLog.java:173)] Initializing Spring embedded WebApplicationContext
16:04:08.619 INFO  [main][ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:292)] Root WebApplicationContext: initialization completed in 1476 ms
16:04:08.800 INFO  [main][HikariDataSource.getConnection(HikariDataSource.java:110)] HikariPool-1 - Starting...
16:04:08.950 INFO  [main][HikariDataSource.getConnection(HikariDataSource.java:123)] HikariPool-1 - Start completed.
16:04:09.014 INFO  [main][LogHelper.logPersistenceUnitInformation(LogHelper.java:31)] HHH000204: Processing PersistenceUnitInfo [name: default]
16:04:09.067 INFO  [main][Version.logVersion(Version.java:44)] HHH000412: Hibernate ORM core version 5.6.15.Final
16:04:09.229 INFO  [main][Version.<clinit>(JavaReflectionManager.java:56)] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
16:04:09.351 INFO  [main][Dialect.<init>(Dialect.java:175)] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
16:04:09.913 INFO  [main][JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
16:04:09.925 INFO  [main][LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:437)] Initialized JPA EntityManagerFactory for persistence unit 'default'
16:04:10.555 WARN  [main][JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor(JpaBaseConfiguration.java:223)] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
16:04:10.858 INFO  [main][Http11NioProtocol.log(DirectJDKLog.java:173)] Starting ProtocolHandler ["http-nio-8080"]
16:04:10.864 WARN  [main][AnnotationConfigServletWebServerApplicationContext.refresh(AbstractApplicationContext.java:591)] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
16:04:10.866 INFO  [main][LocalContainerEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:651)] Closing JPA EntityManagerFactory for persistence unit 'default'
16:04:10.867 INFO  [main][HikariDataSource.close(HikariDataSource.java:350)] HikariPool-1 - Shutdown initiated...
16:04:10.880 INFO  [main][HikariDataSource.close(HikariDataSource.java:352)] HikariPool-1 - Shutdown completed.
16:04:10.882 INFO  [main][Http11NioProtocol.log(DirectJDKLog.java:173)] Pausing ProtocolHandler ["http-nio-8080"]
16:04:10.882 INFO  [main][StandardService.log(DirectJDKLog.java:173)] Stopping service [Tomcat]
16:04:10.885 INFO  [main][Http11NioProtocol.log(DirectJDKLog.java:173)] Stopping ProtocolHandler ["http-nio-8080"]
16:04:10.885 INFO  [main][Http11NioProtocol.log(DirectJDKLog.java:173)] Destroying ProtocolHandler ["http-nio-8080"]
16:04:10.891 INFO  [main][ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136)] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
16:04:10.906 ERROR [main][LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:40)] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

16:04:21.291 INFO  [main][AttendanceApplication.logStarting(StartupInfoLogger.java:55)] Starting AttendanceApplication using Java 11.0.14.1 on DESKTOP-PM8IQCK with PID 38840 (D:\java後端\Java_project\backend-attendance\attendance\bin\main started by user in D:\java後端\Java_project\backend-attendance\attendance)
16:04:21.295 INFO  [main][AttendanceApplication.logStartupProfileInfo(SpringApplication.java:632)] No active profile set, falling back to 1 default profile: "default"
16:04:21.905 INFO  [main][RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132)] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
16:04:21.980 INFO  [main][RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201)] Finished Spring Data repository scanning in 62 ms. Found 6 JPA repository interfaces.
16:04:22.650 INFO  [main][TomcatWebServer.initialize(TomcatWebServer.java:108)] Tomcat initialized with port(s): 8080 (http)
16:04:22.657 INFO  [main][Http11NioProtocol.log(DirectJDKLog.java:173)] Initializing ProtocolHandler ["http-nio-8080"]
16:04:22.659 INFO  [main][StandardService.log(DirectJDKLog.java:173)] Starting service [Tomcat]
16:04:22.659 INFO  [main][StandardEngine.log(DirectJDKLog.java:173)] Starting Servlet engine: [Apache Tomcat/9.0.82]
16:04:22.765 INFO  [main][[/].log(DirectJDKLog.java:173)] Initializing Spring embedded WebApplicationContext
16:04:22.765 INFO  [main][ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:292)] Root WebApplicationContext: initialization completed in 1416 ms
16:04:22.936 INFO  [main][HikariDataSource.getConnection(HikariDataSource.java:110)] HikariPool-1 - Starting...
16:04:23.103 INFO  [main][HikariDataSource.getConnection(HikariDataSource.java:123)] HikariPool-1 - Start completed.
16:04:23.154 INFO  [main][LogHelper.logPersistenceUnitInformation(LogHelper.java:31)] HHH000204: Processing PersistenceUnitInfo [name: default]
16:04:23.206 INFO  [main][Version.logVersion(Version.java:44)] HHH000412: Hibernate ORM core version 5.6.15.Final
16:04:23.368 INFO  [main][Version.<clinit>(JavaReflectionManager.java:56)] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
16:04:23.493 INFO  [main][Dialect.<init>(Dialect.java:175)] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
16:04:24.068 INFO  [main][JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
16:04:24.078 INFO  [main][LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:437)] Initialized JPA EntityManagerFactory for persistence unit 'default'
16:04:24.626 WARN  [main][JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor(JpaBaseConfiguration.java:223)] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
16:04:24.951 INFO  [main][Http11NioProtocol.log(DirectJDKLog.java:173)] Starting ProtocolHandler ["http-nio-8080"]
16:04:24.973 INFO  [main][TomcatWebServer.start(TomcatWebServer.java:220)] Tomcat started on port(s): 8080 (http) with context path ''
16:04:24.981 INFO  [main][AttendanceApplication.logStarted(StartupInfoLogger.java:61)] Started AttendanceApplication in 4.114 seconds (JVM running for 4.7)
